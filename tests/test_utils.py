import importlib
import pytest
from datetime import datetime


# ===== –¢–ï–°–¢–´ –î–õ–Ø format_steam_profile =====

def test_format_steam_profile_empty_data():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—É—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è"""
    utils = importlib.import_module("utils")
    
    # –ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
    empty_data = {}
    result = utils.format_steam_profile(empty_data)
    assert "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã." in result
    
    # –î–∞–Ω–Ω—ã–µ –±–µ–∑ players
    no_players_data = {"response": {}}
    result = utils.format_steam_profile(no_players_data)
    assert "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã." in result
    
    # –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ players
    empty_players_data = {"response": {"players": []}}
    result = utils.format_steam_profile(empty_players_data)
    assert "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã." in result


def test_format_steam_profile_basic_data():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è"""
    utils = importlib.import_module("utils")
    
    basic_data = {
        "response": {
            "players": [{
                "personaname": "TestUser",
                "steamid": "76561198006409530",
                "profileurl": "https://steamcommunity.com/id/testuser/",
                "personastate": 1,
                "communityvisibilitystate": 3
            }]
        }
    }
    
    result = utils.format_steam_profile(basic_data)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    assert "TestUser" in result
    assert "76561198006409530" in result
    assert "https://steamcommunity.com/id/testuser/" in result
    assert "Online" in result
    assert "Public" in result
    assert "Steam Profile:" in result


def test_format_steam_profile_all_fields():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è"""
    utils = importlib.import_module("utils")
    
    full_data = {
        "response": {
            "players": [{
                "personaname": "FullTestUser",
                "steamid": "76561198006409530",
                "profileurl": "https://steamcommunity.com/id/fulltestuser/",
                "personastate": 2,
                "communityvisibilitystate": 3,
                "timecreated": 1234567890,
                "loccountrycode": "US",
                "locstatecode": "CA",
                "loccityid": 12345,
                "realname": "John Doe",
                "avatarfull": "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/12/123456.jpg"
            }]
        }
    }
    
    result = utils.format_steam_profile(full_data)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è
    assert "FullTestUser" in result
    assert "76561198006409530" in result
    assert "Busy" in result  # personastate = 2
    assert "Public" in result
    assert "2009-02-14" in result  # timecreated converted (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–∞—Ç–∞)
    assert "US/CA" in result  # location
    assert "John Doe" in result  # real name
    assert "https://steamcdn-a.akamaihd.net" in result  # avatar


def test_format_steam_profile_persona_states():
    """–¢–µ—Å—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–µ—Ä—Å–æ–Ω—ã"""
    utils = importlib.import_module("utils")
    
    states = {
        0: "Offline",
        1: "Online", 
        2: "Busy",
        3: "Away",
        4: "Snooze",
        5: "Looking to trade",
        6: "Looking to play",
        999: "Unknown"  # –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    }
    
    for state_code, expected_text in states.items():
        data = {
            "response": {
                "players": [{
                    "personaname": "TestUser",
                    "steamid": "76561198006409530",
                    "personastate": state_code,
                    "communityvisibilitystate": 3
                }]
            }
        }
        
        result = utils.format_steam_profile(data)
        assert expected_text in result


def test_format_steam_profile_visibility_states():
    """–¢–µ—Å—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è"""
    utils = importlib.import_module("utils")
    
    visibility_states = {
        1: "Private",
        2: "Friends only",
        3: "Public",
        999: "Unknown"  # –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    }
    
    for visibility_code, expected_text in visibility_states.items():
        data = {
            "response": {
                "players": [{
                    "personaname": "TestUser",
                    "steamid": "76561198006409530",
                    "personastate": 1,
                    "communityvisibilitystate": visibility_code
                }]
            }
        }
        
        result = utils.format_steam_profile(data)
        assert expected_text in result


def test_format_steam_profile_missing_optional_fields():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π"""
    utils = importlib.import_module("utils")
    
    minimal_data = {
        "response": {
            "players": [{
                "steamid": "76561198006409530",
                "personastate": 1,
                "communityvisibilitystate": 3
                # –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç personaname, profileurl –∏ –¥—Ä—É–≥–∏–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
            }]
        }
    }
    
    result = utils.format_steam_profile(minimal_data)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –ø–∞–¥–∞–µ—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    assert "Unknown" in result or "N/A" in result
    assert "76561198006409530" in result
    assert "Online" in result
    assert "Public" in result


def test_format_steam_profile_invalid_timestamp():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ timestamp"""
    utils = importlib.import_module("utils")
    
    data_with_invalid_timestamp = {
        "response": {
            "players": [{
                "personaname": "TestUser",
                "steamid": "76561198006409530",
                "personastate": 1,
                "communityvisibilitystate": 3,
                "timecreated": "invalid_timestamp"  # –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π timestamp
            }]
        }
    }
    
    result = utils.format_steam_profile(data_with_invalid_timestamp)
    
    # –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –∏ –ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    assert "invalid_timestamp" in result
    assert "TestUser" in result


def test_format_steam_profile_special_characters():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ –∏–º–µ–Ω–∞—Ö"""
    utils = importlib.import_module("utils")
    
    special_names = [
        "User with √©mojis üéÆüî•",
        "–†—É—Å—Å–∫–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "User with <HTML> & symbols",
        "User|with|pipes",
        "User\"with\"quotes"
    ]
    
    for name in special_names:
        data = {
            "response": {
                "players": [{
                    "personaname": name,
                    "steamid": "76561198006409530",
                    "personastate": 1,
                    "communityvisibilitystate": 3
                }]
            }
        }
        
        result = utils.format_steam_profile(data)
        assert name in result
        assert "Steam Profile:" in result


def test_format_steam_profile_location_combinations():
    """–¢–µ—Å—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –ª–æ–∫–∞—Ü–∏–∏"""
    utils = importlib.import_module("utils")
    
    location_tests = [
        # –ü–æ–ª–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è
        {"loccountrycode": "US", "locstatecode": "CA", "loccityid": 12345},
        # –¢–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω–∞
        {"loccountrycode": "RU"},
        # –°—Ç—Ä–∞–Ω–∞ –∏ —à—Ç–∞—Ç
        {"loccountrycode": "US", "locstatecode": "NY"},
        # –¢–æ–ª—å–∫–æ —à—Ç–∞—Ç (—Å—Ç—Ä–∞–Ω–Ω—ã–π —Å–ª—É—á–∞–π)
        {"locstatecode": "TX"},
        # –¢–æ–ª—å–∫–æ –≥–æ—Ä–æ–¥ (—Å—Ç—Ä–∞–Ω–Ω—ã–π —Å–ª—É—á–∞–π)
        {"loccityid": 54321}
    ]
    
    for location_data in location_tests:
        data = {
            "response": {
                "players": [{
                    "personaname": "TestUser",
                    "steamid": "76561198006409530",
                    "personastate": 1,
                    "communityvisibilitystate": 3,
                    **location_data
                }]
            }
        }
        
        result = utils.format_steam_profile(data)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ª–æ–∫–∞—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ø–æ–ª–µ
        if location_data:
            assert "üìç Location:" in result


def test_format_steam_profile_edge_cases():
    """–¢–µ—Å—Ç –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤"""
    utils = importlib.import_module("utils")
    
    edge_cases = [
        # –û—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ –∏–º—è
        {
            "personaname": "A" * 1000,
            "steamid": "76561198006409530",
            "personastate": 1,
            "communityvisibilitystate": 3
        },
        # –ü—É—Å—Ç–æ–µ –∏–º—è
        {
            "personaname": "",
            "steamid": "76561198006409530",
            "personastate": 1,
            "communityvisibilitystate": 3
        },
        # –û—á–µ–Ω—å —Å—Ç–∞—Ä—ã–π timestamp
        {
            "personaname": "OldUser",
            "steamid": "76561198006409530",
            "personastate": 1,
            "communityvisibilitystate": 3,
            "timecreated": 0  # 1970-01-01
        },
        # –û—á–µ–Ω—å –Ω–æ–≤—ã–π timestamp
        {
            "personaname": "FutureUser",
            "steamid": "76561198006409530",
            "personastate": 1,
            "communityvisibilitystate": 3,
            "timecreated": 2147483647  # –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π 32-–±–∏—Ç–Ω—ã–π timestamp
        }
    ]
    
    for player_data in edge_cases:
        data = {
            "response": {
                "players": [player_data]
            }
        }
        
        result = utils.format_steam_profile(data)
        
        # –§—É–Ω–∫—Ü–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø–∞–¥–∞—Ç—å
        assert isinstance(result, str)
        assert len(result) > 0
        assert "Steam Profile:" in result


def test_format_steam_profile_output_structure():
    """–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    utils = importlib.import_module("utils")
    
    data = {
        "response": {
            "players": [{
                "personaname": "StructureTest",
                "steamid": "76561198006409530",
                "profileurl": "https://steamcommunity.com/id/test/",
                "personastate": 1,
                "communityvisibilitystate": 3,
                "timecreated": 1234567890,
                "realname": "Test User"
            }]
        }
    }
    
    result = utils.format_steam_profile(data)
    lines = result.split('\n')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—ã–≤–æ–¥–∞
    assert any("=" * 50 in line for line in lines)  # —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏
    assert any("Steam Profile:" in line for line in lines)  # –∑–∞–≥–æ–ª–æ–≤–æ–∫
    assert any("üë§ Nickname:" in line for line in lines)  # –Ω–∏–∫–Ω–µ–π–º
    assert any("üÜî SteamID:" in line for line in lines)  # Steam ID
    assert any("üåê Profile URL:" in line for line in lines)  # URL –ø—Ä–æ—Ñ–∏–ª—è
    assert any("üü¢ Status:" in line for line in lines)  # —Å—Ç–∞—Ç—É—Å
    assert any("üìÖ Account created:" in line for line in lines)  # –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
    assert any("üë• Real name:" in line for line in lines)  # —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è
    assert any("üëÅÔ∏è Visibility:" in line for line in lines)  # –≤–∏–¥–∏–º–æ—Å—Ç—å


def test_format_steam_profile_none_values():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ None –∑–Ω–∞—á–µ–Ω–∏–π"""
    utils = importlib.import_module("utils")
    
    data_with_nones = {
        "response": {
            "players": [{
                "personaname": None,
                "steamid": "76561198006409530",
                "profileurl": None,
                "personastate": 1,
                "communityvisibilitystate": 3,
                "realname": None
            }]
        }
    }
    
    result = utils.format_steam_profile(data_with_nones)
    
    # –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å None –∑–Ω–∞—á–µ–Ω–∏—è
    assert "None" in result  # None –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å
    assert "76561198006409530" in result
    assert "Steam Profile:" in result